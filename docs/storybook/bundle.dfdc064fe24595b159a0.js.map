{"version":3,"file":"bundle.dfdc064fe24595b159a0.js","mappings":"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","sources":["webpack://phaser-webpack-template/./storybook/StoryScene.ts","webpack://phaser-webpack-template/./storybook/interfaces.ts","webpack://phaser-webpack-template/./storybook/stories.ts","webpack://phaser-webpack-template/./src/scenes/MainScene.ts","webpack://phaser-webpack-template/./src/config.ts","webpack://phaser-webpack-template/./storybook/index.ts"],"sourcesContent":["export class StoryScene extends Phaser.Scene {\n  preload() {\n    /** включает в себя загрузку текстуры поэтому ставим тут **/\n    // addTestMapBg(this).catch(console.warn);\n  }\n  create() {\n    console.log(\"Story Scene created...\");\n  }\n}\n","export type GameObject =\n  | Phaser.GameObjects.Container\n  | Phaser.GameObjects.Image\n  | Phaser.GameObjects.Text\n  | Phaser.GameObjects.RenderTexture\n  | Phaser.GameObjects.Shape\n  | Phaser.GameObjects.TileSprite;\n\nexport interface IStory {\n  title: string;\n  /**\n   *  run\n   *  - может создавать что угодно на сцене\n   *  - возвращаемая функция должна очищать созданный объект\n   *  - добавление к сцене лежит на его ответственности\n   */\n  run: (scene: Phaser.Scene) => Promise<() => void>;\n}\n\nexport interface IStoryListItem extends Partial<IStory>{\n  title: string;\n  template?: 'titleDelimiter',\n  run?: (scene: Phaser.Scene) => Promise<() => void>;\n}\n\nexport const storyTitle = (title:string):IStoryListItem=>({ title, template: 'titleDelimiter'})\n","import { IStoryListItem, storyTitle } from \"./interfaces\";\n\nexport const stories: IStoryListItem[] = Array.from(\n  new Set<IStoryListItem>([\n    storyTitle(\"Simple Games\"),\n  ])\n);\n","export class MainScene extends Phaser.Scene {\n  constructor() {\n    super(MainScene.name);\n  }\n\n  preload() {\n    this.load.image(\"sky\", \"./assets/images/space3.png\");\n    this.load.image(\"logo\", \"./assets/images/phaser3-logo.png\");\n    this.load.image(\"red\", \"./assets/images/red.png\");\n  }\n\n  create() {\n    this.add.image(400, 300, \"sky\");\n\n    const particles = this.add.particles(0, 0, \"red\", {\n      speed: 100,\n      scale: { start: 1, end: 0 },\n      blendMode: \"ADD\"\n    });\n\n    const logo = this.physics.add.image(400, 100, \"logo\");\n\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    particles.startFollow(logo);\n\n    console.log('Game started');\n  }\n}\n","import { MainScene } from \"./scenes/MainScene\";\n\nconst scaleConfig: Phaser.Types.Core.ScaleConfig = {\n  mode: Phaser.Scale.FIT,\n  autoCenter: Phaser.Scale.CENTER_BOTH,\n  parent: \"game\",\n  width: 960,\n  height: 640\n};\n\nexport type IPhaserConfig = Phaser.Types.Core.GameConfig;\n\nexport const phaserGameConfig: IPhaserConfig = {\n  width: 800,\n  height: 600,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { x: 0, y: 200 }\n    }\n  },\n  type: Phaser.AUTO,\n  backgroundColor: \"#4488aa\",\n  transparent: true,\n  scale: scaleConfig,\n  scene: [MainScene]\n};\n","import { StoryScene } from \"./StoryScene\";\nimport { stories } from \"./stories\";\nimport { IStory, IStoryListItem } from \"./interfaces\";\nimport { IPhaserConfig, phaserGameConfig } from \"../src/config\";\n\n\nconst config: IPhaserConfig = {\n  ...phaserGameConfig,\n  scene: [new StoryScene(StoryScene.name)],\n};\n\nconst game = new Phaser.Game(config);\n\nconst storiesEl = document.getElementById(\"stories\");\nif (storiesEl == null) throw \"no sidebar\";\nconst titleEl = document.getElementById(\"gameTitle\");\n\nlet prevStoryClose: () => void | undefined;\nconst runInGame = async (story: IStory, game: Phaser.Game) => {\n  prevStoryClose?.();\n  titleEl!.innerHTML = story.title;\n  const scene = game.scene.getScene(StoryScene.name);\n  prevStoryClose = await story.run(scene);\n};\n\nlet storiesIndex = 0;\nstories.forEach((story) => {\n  if (story.run != null) {\n    addStory(story as IStory, storiesEl, storiesIndex == 0);\n    storiesIndex++;\n  } else if (story.template === \"titleDelimiter\") {\n    addStoryDelimiter(story, storiesEl);\n  }\n});\n\nfunction addStory(story: IStory, storiesEl: HTMLElement, isStart: boolean) {\n  const el = addElement({\n    storyTag: \"button\",\n    innerHtml: `${story.title}`,\n    className: \"story\",\n    parent: storiesEl,\n  });\n  el.addEventListener(\"click\", () => runInGame(story, game).catch(console.warn));\n\n  if (isStart) {\n    setTimeout(() => {\n      el.focus();\n      runInGame(story, game).catch(console.warn);\n    }, 500);\n  }\n}\n\nfunction addStoryDelimiter(story: IStoryListItem, storiesEl: HTMLElement) {\n  return addElement({\n    storyTag: \"div\",\n    innerHtml: `${story.title}`,\n    className: \"storyDelimiter\",\n    parent: storiesEl,\n  });\n}\n\ninterface IAddProps {\n  storyTag: string;\n  innerHtml: string;\n  className: string;\n  parent: HTMLElement;\n}\nfunction addElement({ storyTag, className, innerHtml, parent }: IAddProps) {\n  const el = document.createElement(storyTag);\n  el.innerHTML = innerHtml;\n  el.classList.add(className);\n  parent.append(el);\n  return el;\n}\n"],"names":["StoryScene","storyTitle","title","stories","MainScene","particles","logo","scaleConfig","phaserGameConfig","config","game","storiesEl","titleEl","prevStoryClose","runInGame","story","scene","storiesIndex","addStory","addStoryDelimiter","isStart","el","addElement","storyTag","className","innerHtml","parent"],"sourceRoot":""}